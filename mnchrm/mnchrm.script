#
# A script that displays the distribution logo and a loading 
# bar or a password prompt in the center of the screen.
#
# Much of this code is based on the default example script.
#

#
# Background and Logo
#

status = "normal";

Window.SetBackgroundTopColor(0.0, 0.0, 0.0);
Window.SetBackgroundBottomColor(0.0, 0.0, 0.0);

logo.image = Image("icons//tux.png");
logo.sprite = Sprite(logo.image);

logo.sprite.SetX(Window.GetWidth() * 0.50 - logo.image.GetWidth() * 0.50);
logo.sprite.SetY(Window.GetHeight() * 0.40 - logo.image.GetHeight() * 0.50);

#
# Progress Bar
#

bar.org_img = Image("icons//bar.png");
bar.cur_img = Image("icons//bar.png");
bar.sprite = Sprite(bar.cur_img);
bar.sprite.SetOpacity(0);

bar.sprite.SetX(Window.GetWidth() * 0.50 - bar.cur_img.GetWidth() * 0.50);
bar.sprite.SetY(Window.GetHeight() * 0.60 - bar.cur_img.GetHeight() * 0.50);

fun progress_callback(duration, progress)
{
    if (status == "normal")
    {
        bar.cur_img = bar.org_img.Scale(bar.org_img.GetWidth() * progress, bar.org_img.GetHeight());
        bar.sprite.SetImage(bar.cur_img);
        bar.sprite.SetOpacity(1);
    }
    else bar.sprite.SetOpacity(0);
}

Plymouth.SetBootProgressFunction(progress_callback);

#
# Status Message
#

message.sprite = Sprite();

fun display_message_callback(text)
{
    message.image = Image.Text(text, 1, 1, 1);
    message.sprite = Sprite(message.image);

    message.sprite.SetX(Window.GetWidth() * 0.50 - message.image.GetWidth() * 0.50);
    message.sprite.SetY(Window.GetHeight() * 0.65 - message.image.GetHeight() * 0.50);
}

fun hide_message_callback(text)
{
    message.sprite = Sprite();
}

Plymouth.SetDisplayMessageFunction(display_message_callback);
Plymouth.SetHideMessageFunction(hide_message_callback);

#
# Password Dialog
#

status = "normal";

fun dialog_setup()
{
    local.entry;
    entry.image = Image("icons//entry.png");
    entry.sprite = Sprite(entry.image);

    local.lock;
    lock.image = Image("icons//lock.png");
    lock.sprite = Sprite(lock.image);

    entry.x = Window.GetWidth() * 0.50 - entry.image.GetWidth() * 0.50 + lock.image.GetWidth() * 0.50;
    entry.y = Window.GetHeight() * 0.60 - entry.image.GetHeight() * 0.50;
    entry.z = 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    lock.sprite.SetX(Window.GetWidth() * 0.50 - lock.image.GetWidth() * 0.50 - entry.image.GetWidth() * 0.50);
    lock.sprite.SetY(Window.GetHeight() * 0.60 - lock.image.GetHeight() * 0.50);

    global.dialog.entry = entry;
    global.dialog.lock = lock;
    global.dialog.bullet_image = Image("icons//bullet.png");
    dialog_opacity(1);
}
    
fun dialog_opacity(opacity)
{
    dialog.box.sprite.SetOpacity(opacity);
    dialog.lock.sprite.SetOpacity(opacity);
    dialog.entry.sprite.SetOpacity(opacity);

    for (index = 0; dialog.bullet[index]; index++)
        dialog.bullet[index].sprite.SetOpacity(opacity);
}

fun display_normal_callback()
{
    global.status = "normal";

    if (global.dialog) dialog_opacity(0);
}

fun display_password_callback(prompt, bullets)
{
    global.status = "password";

    if (!global.dialog) dialog_setup();
    else dialog_opacity(1);

    for (index = 0; dialog.bullet[index] || index < bullets; index++)
    {
        if (!dialog.bullet[index])
        {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
        }

        if (index < bullets) dialog.bullet[index].sprite.SetOpacity(1);
        else dialog.bullet[index].sprite.SetOpacity(0);
    }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
